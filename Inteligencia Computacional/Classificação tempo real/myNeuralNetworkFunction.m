function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 20-Aug-2021 19:03:02.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx2 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [7.321;17.21];
x1_step1.gain = [0.191369246962013;0.195579894386857];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.4289583991194874102;-3.2713564226569782356;2.5126678341845645193;-0.35302929869285198938;-0.23877299468194723708;0.49970417083874263398;0.14122511940999760149;3.0392906311077982906;3.258788943950835737;-4.418484293369592919];
IW1_1 = [4.1026381554314639288 -1.661168549561231611;4.0505217178142531864 -1.9969428513268869807;-3.6023022400010362709 2.5191884929178236519;2.640548442741292412 4.5906206947123990858;-4.8378659327131625645 -0.72333845167204513515;4.4473328633131448129 -0.85527547396945957647;-3.6038845194178890097 -3.8204776653755949667;2.1384550524430094853 -3.4566526798150891686;3.4665766158257325102 -2.9545279037187870408;-4.3047505179530620723 1.0550187457876714081];

% Layer 2
b2 = 0.41790254826169287439;
LW2_1 = [-0.12618147464205009545 1.0631905762317990227 0.2882072283347023034 5.6898110613381938094 -3.4552114108132352399 1.6965162285056143432 -5.8750915823146865336 0.30490676512988440505 -0.75286820153444755643 -0.25192823361674032689];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);

% Output 1
y1 = a2;
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
